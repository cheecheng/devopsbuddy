package com.cheecheng.devopsbuddy.backend.persistence.domain.backend;

import com.cheecheng.devopsbuddy.enums.PlansEnum;

import javax.persistence.Entity;
import javax.persistence.Id;
import java.util.Objects;

@Entity
public class Plan {

    @Id
    private int id;

    private String name;

    public Plan() {

    }

    public Plan(PlansEnum plansEnum) {
        this.id = plansEnum.getId();
        this.name = plansEnum.getPlanName();
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    /* Generated using template: IntelliJ Default
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Plan plan = (Plan) o;

        if (id != plan.id) return false;
        return name != null ? name.equals(plan.name) : plan.name == null;
    }

    @Override
    public int hashCode() {
        int result = id;
        result = 31 * result + (name != null ? name.hashCode() : 0);
        return result;
    }
    */

    /* Generated using template: java.util.Objects.equals and hasCode (java 7+) */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Plan plan = (Plan) o;
        return id == plan.id &&
                Objects.equals(name, plan.name);
    }

    @Override
    public int hashCode() {

        return Objects.hash(id, name);
    }
}

/*
Hibernate:
    drop table plan if exists
Hibernate:
    drop table role if exists
Hibernate:
    drop table user if exists
Hibernate:
    drop table user_roles if exists
Hibernate:
    create table plan (
        id integer not null,
        name varchar(255),
        primary key (id)
    )
Hibernate:
    create table role (
        id integer not null,
        name varchar(255),
        primary key (id)
    )
Hibernate:
    create table user (
        id bigint generated by default as identity,
        country varchar(255),
        description varchar(500),
        email varchar(255),
        enabled boolean not null,
        first_name varchar(255),
        last_name varchar(255),
        password varchar(255),
        phone_number varchar(255),
        profile_image_url varchar(255),
        stripe_customer_id varchar(255),
        username varchar(255),
        plan_id integer,
        primary key (id)
    )
Hibernate:
    create table user_roles (
        users_id bigint not null,
        roles_id integer not null,
        primary key (users_id, roles_id)
    )
Hibernate:
    alter table user
        add constraint FKeos0c7nc1mvicjcxbkxxolohc
        foreign key (plan_id)
        references plan
Hibernate:
    alter table user_roles
        add constraint FKj9553ass9uctjrmh0gkqsmv0d
        foreign key (roles_id)
        references role
Hibernate:
    alter table user_roles
        add constraint FK7ecyobaa59vxkxckg6t355l86
        foreign key (users_id)
        references user
 */